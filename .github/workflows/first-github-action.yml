name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 
on: 
  workflow_dispatch:
    inputs:
      version:
        description: Bump Version
        required: true
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
  
      - name: Clone Repo
        run: | 
          git clone $GITHUB_SERVER_URL/$GITHUB_REPOSITORY.git

      - name: Initialize mandatory git config
        run: |
          cd ${{ github.event.repository.name }}
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
          git config --global credential.helper "/bin/sh ./.git_creds.sh"
          echo '#!/bin/sh' > ./.git_creds.sh
          echo "sleep 1" >> ./.git_creds.sh
          echo "echo username=${{ github.repository_owner }}" >> ./.git_creds.sh
          echo "echo password=${{ secrets.GITHUB_TOKEN }}" >> ./.git_creds.sh
          echo .git_creds.sh >> .git/info/exclude
          echo pom.xml.versionsBackup >> .git/info/exclude
          git config --global --add safe.directory '*'
          git fetch --all

      - name: Create release branch
        run: | 
          cd ${{ github.event.repository.name }}
          git checkout develop
          git checkout -b release/${{ github.event.inputs.version }}

      - name: Bump version in package.json
        run: | 
           cd ${{ github.event.repository.name }}
           yarn version --new-version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Commit files
        id: make-commit
        run: |
          cd ${{ github.event.repository.name }}
          git add .
          git commit --message "Prepare release ${{ github.event.inputs.version }}"
          echo "::set-output name=commit::$(git rev-parse HEAD)"
          
      - name: Push new branch
        run: |
          cd ${{ github.event.repository.name }}
          git push origin release/${{ github.event.inputs.version }}

      - name: Update main
        run: | 
          cd ${{ github.event.repository.name }}
          git checkout main
          git merge --no-ff release/${{ github.event.inputs.version }} 
          git tag -a ${{ github.event.inputs.version }} -m ${{ github.event.inputs.version }}
          git push origin main
          